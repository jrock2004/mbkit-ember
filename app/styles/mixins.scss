// When using inline SVG (Checkbox component) some browsers
// detect encoded and display the SVG with the correct color,
// while others do not.
// https://gist.github.com/certainlyakey/e9c0d8f5c87ff47e3d5b
@function encodeHexColor($string) {
  @if type-of($string) == 'color' {
    $hex: str-slice(ie-hex-str($string), 4);
    $string: unquote("#{$hex}");
  }
  $string: '%23' + $string;
  @return $string;
}
// Targets fill of all SVG elements that have a fill attribute that contains a pound symbol
@mixin svgFill($fillColor) {
  svg g:not([fill~="#"]),
  svg path:not([fill~="#"]),
  svg mask:not([fill~="#"]),
  svg use:not([fill~="#"]) {
    fill: $fillColor;
  }
}
/*
 * Exposes `loader` class name to be applied to an element
 */
@mixin loader($color, $background) {
  $loadingSpeed: 650;
  .loader {
    &,
    &:before,
    &:after {
      border-radius: 50%;
    }

    color: $color;
    font-size: 4px;
    text-indent: -999px;
    width: 18px;
    height: 18px;
    box-shadow: inset 0 0 0 1px;
    transform: translate3d(-50%, -50%, 0) rotate(180deg);
    position: absolute;
    top: 50%;
    left: 50%;


    &:before,
    &:after {
      position: absolute;
      content: '';
      width: 12px;
      height: 20px;
      background: $background;
      top: -1px;
    }

    &:before {
      border-radius: 20px 0 0 20px;
      left: -1px;
      transform-origin: 11px 11px;
      animation: spin #{$loadingSpeed}ms infinite ease #{$loadingSpeed * .75}ms;
    }
    &:after {
      border-radius: 0 20px 20px 0;
      left: 9px;
      transform-origin: 0px 9px;
      animation: spin #{$loadingSpeed}ms infinite ease;
    }
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
