@mixin svgTargetFill() {
  g:not([fill~="#"]),
  path:not([fill~="#"]),
  use:not([fill~="#"]) {
    @content;
  }
}

@mixin disabled {
  background: $neutral-light;
  border-color: $neutral-light;
  color: $neutral-dark;
  cursor: not-allowed;

  @include svgTargetFill {
    fill: $neutral-dark;
  }
}

$border: 1px solid $neutral-light;

.inputContainer {
  background: $background;
  border-radius: $radius;
  color: $foreground;
  display: flex;
  transition: box-shadow .1s ease-out;
  width: 100%;

  &, & * {
    box-sizing: border-box;
  }

  &.hasFocus {
    box-shadow: 0 0 0 4px var(--focus,rgba(96,150,230,.75));
    .beforeInput, .afterInput {
      border-color: $secondary-base;
    }
  }

  .beforeInput, .afterInput {
    align-items: center;
    border: $border;
    border-radius: $radius 0 0 $radius;
    display: inline-flex;
    padding: 8px;
  }
  .afterInput {
    border-radius: 0 $radius $radius 0;
  }

  &.invalid {
    .beforeInput, .afterInput {
      border-bottom-color: $error-base;
      border-top-color: $error-base;
    }
    .beforeInput {
      border-left-color: $error-base;
    }
    .afterInput {
      border-right-color: $error-base;
    }
  }

  &[data-disabled="true"] {
    .beforeInput, .afterInput {
      @include disabled();
    }
  }
}

.input {
  appearance: none;
  background: $background;
  border: $border;
  border-radius: $radius;
  box-sizing: border-box;
  color: $foreground;
  display: flex;
  flex: 1;
  font-family: $font-family;
  font-size: $font-spec-5-size;
  margin: 0;
  min-width: 0;
  padding: 8px;
  transition: border-color .2s ease-out;
  width: 100%;

  &.hasBefore {
    border-bottom-left-radius: 0;
    border-left: none;
    border-top-left-radius: 0;
  }
  &.hasAfter {
    border-bottom-right-radius: 0;
    border-right: none;
    border-top-right-radius: 0;
  }

  &.hasFocus {
    box-shadow: 0 0 0 4px var(--focus,rgba(96,150,230,.75));
  }
  &:focus {
    border-color: $secondary-base;
    outline: none;
  }
  &.invalid {
    border-color: $error-base;
  }

  &:disabled {
    @include disabled();
  }
}
